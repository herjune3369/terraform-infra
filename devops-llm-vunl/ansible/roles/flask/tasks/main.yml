---
- name: Install system packages
  apt:
    name:
      - python3-pip
      - python3-venv
      - mysql-client
    update_cache: yes
  become: true

- name: Create Flask app directory
  file:
    path: /home/ubuntu/myapp
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Set up Python virtual environment
  command: python3 -m venv /home/ubuntu/myapp/venv
  args:
    creates: /home/ubuntu/myapp/venv
  become: true

- name: Create requirements.txt
  copy:
    dest: /home/ubuntu/myapp/requirements.txt
    content: |
      flask<3
      requests
      pymysql
      python-dotenv
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Install python-dotenv
  pip:
    name: python-dotenv
    virtualenv: /home/ubuntu/myapp/venv

- name: Install pip packages in venv
  pip:
    requirements: /home/ubuntu/myapp/requirements.txt
    virtualenv: /home/ubuntu/myapp/venv
    virtualenv_command: python3 -m venv
  become: true

- name: Copy SQL initialization script
  copy:
    src: init_db.sql
    dest: /home/ubuntu/myapp/init_db.sql
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Initialize database
  shell: |
    mysql -h {{ rds_endpoint }} -u admin -p'{{ db_password }}' < /home/ubuntu/myapp/init_db.sql
  ignore_errors: true

- name: Create environment file for Flask (.env)
  copy:
    dest: /home/ubuntu/myapp/.env
    content: |
      FLASK_APP=app.py
      FLASK_ENV=production
      FLASK_DEBUG=0
      RDS_HOST={{ rds_endpoint }}
      RDS_USER=admin
      RDS_PASSWORD={{ db_password }}
      RDS_DATABASE=flask_app
      GEMINI_API_KEY=your-gemini-api-key-here
      UPLOAD_FOLDER=uploads
      MAX_CONTENT_LENGTH=16777216
      SECRET_KEY=your-secret-key-here
    owner: ubuntu
    group: ubuntu
    mode: '0600'

- name: Copy Flask app.py
  copy:
    src: app.py
    dest: /home/ubuntu/myapp/app.py
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Copy vulnService.py
  copy:
    src: vulnService.py
    dest: /home/ubuntu/myapp/vulnService.py
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Copy llm_client.py
  copy:
    src: llm_client.py
    dest: /home/ubuntu/myapp/llm_client.py
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Copy report_generator.py
  copy:
    src: report_generator.py
    dest: /home/ubuntu/myapp/report_generator.py
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Create uploads directory
  file:
    path: /home/ubuntu/myapp/uploads
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Kill existing Flask app if running
  shell: "pkill -f app.py"
  ignore_errors: true

- name: Start Flask app with nohup
  shell: |
    source /home/ubuntu/myapp/venv/bin/activate
    nohup python /home/ubuntu/myapp/app.py > /home/ubuntu/myapp/flask.log 2>&1 &
  args:
    executable: /bin/bash
  become: true

- name: Wait for Flask app to start
  wait_for:
    port: 5000
    host: "{{ ansible_default_ipv4.address }}"
    delay: 10
    timeout: 60
  become: true

- name: Check Flask app logs
  shell: tail -20 /home/ubuntu/myapp/flask.log
  register: flask_logs
  become: true

- name: Display Flask logs
  debug:
    var: flask_logs.stdout_lines
