apiVersion: apps/v1
kind: Deployment
metadata:
  name: saju-app
  labels:
    app: saju-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: saju-app
  template:
    metadata:
      labels:
        app: saju-app
    spec:
      containers:
      - name: saju-app
        image: 483260554116.dkr.ecr.ap-northeast-2.amazonaws.com/saju-app:latest
        ports:
        - containerPort: 5000
        env:
        - name: RDS_HOST
          value: "flask-db.czos9xo3nzg2.ap-northeast-2.rds.amazonaws.com"
        - name: RDS_USER
          value: "admin"
        - name: RDS_PASSWORD
          value: "yourstrongpassword"
        - name: RDS_DATABASE
          value: "saju"
        - name: GEMINI_API_KEY
          value: "AIzaSyB-lFb9w-Uy-sJtw31xlVx8ohnQpzNje4g"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: saju-app-service
  labels:
    app: saju-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: saju-app
---
# Secret은 별도로 생성하거나 환경변수로 대체
# 실제 운영환경에서는 AWS Secrets Manager나 HashiCorp Vault 사용 권장 